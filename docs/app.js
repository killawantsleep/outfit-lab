// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
  items: [],
  cart: JSON.parse(localStorage.getItem('cart')) || []
};

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const elements = {
  itemsContainer: document.getElementById('itemsContainer'),
  cartButton: document.getElementById('cartButton'),
  cartCounter: document.getElementById('cartCounter'),
  cartModal: document.getElementById('cartModal'),
  cartItems: document.getElementById('cartItems'),
  cartTotal: document.getElementById('cartTotal'),
  closeCart: document.getElementById('closeCart'),
  checkoutButton: document.getElementById('checkoutButton')
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function initCart() {
  updateCartCounter();
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  elements.cartButton.addEventListener('click', openCart);
  elements.closeCart.addEventListener('click', closeCart);
  elements.checkoutButton.addEventListener('click', checkout);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
async function loadItems() {
  try {
    const response = await fetch('https://script.google.com/macros/s/AKfycbzI9zOhivLi4RClLlDkl7xqOQEIlWLUOIldaVwGZzOFgcG50AwFBsyfDQ2W7twPRp59eA/exec');
    state.items = await response.json();
    renderItems();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
    renderItems([{
      name: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
      price: 0,
      image: "https://via.placeholder.com/300",
      size: "XL"
    }]);
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
function renderItems() {
  elements.itemsContainer.innerHTML = state.items.map(item => `
    <div class="item">
      <img src="${item.image}" class="item-image">
      <h3>${item.name}</h3>
      <p>${item.price} ‚ÇΩ</p>
      <p>–†–∞–∑–º–µ—Ä: ${item.size || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
      <button class="buy-button" onclick="addToCart(${state.items.indexOf(item)})">
        –í –∫–æ—Ä–∑–∏–Ω—É
      </button>
    </div>
  `).join('');
}

// –§—É–Ω–∫—Ü–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã
function addToCart(itemIndex) {
  const item = state.items[itemIndex];
  state.cart.push(item);
  saveCart();
  tg.showAlert(`‚úÖ ${item.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
}

function removeFromCart(index) {
  state.cart.splice(index, 1);
  saveCart();
  renderCart();
}

function saveCart() {
  localStorage.setItem('cart', JSON.stringify(state.cart));
  updateCartCounter();
}

function updateCartCounter() {
  elements.cartCounter.textContent = state.cart.length;
  tg.MainButton.setText(`üõçÔ∏è –ö–æ—Ä–∑–∏–Ω–∞ (${state.cart.length})`);
  state.cart.length > 0 ? tg.MainButton.show() : tg.MainButton.hide();
}

function openCart() {
  renderCart();
  elements.cartModal.style.display = 'block';
}

function closeCart() {
  elements.cartModal.style.display = 'none';
}

function renderCart() {
  elements.cartItems.innerHTML = state.cart.map((item, index) => `
    <div class="cart-item">
      <img src="${item.image}">
      <div>
        <h4>${item.name}</h4>
        <p>${item.price} ‚ÇΩ</p>
        <button onclick="removeFromCart(${index})">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
      </div>
    </div>
  `).join('');
  
  const total = state.cart.reduce((sum, item) => sum + Number(item.price), 0);
  elements.cartTotal.textContent = `–ò—Ç–æ–≥–æ: ${total} ‚ÇΩ`;
}

function checkout() {
  tg.showAlert(`–û—Ñ–æ—Ä–º–ª–µ–Ω –∑–∞–∫–∞–∑ –Ω–∞ ${state.cart.length} —Ç–æ–≤–∞—Ä–æ–≤!`);
  state.cart = [];
  saveCart();
  closeCart();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
  tg.MainButton.setText("üõçÔ∏è –ö–æ—Ä–∑–∏–Ω–∞");
  initCart();
  loadItems();
  setInterval(loadItems, 30000); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML
window.addToCart = addToCart;
window.removeFromCart = removeFromCart;