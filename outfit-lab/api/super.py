import os
import telebot
import json
import requests
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CONFIG = {
    'ADMINS': [5000931101],  # –í–∞—à Telegram ID (—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π)
    'WEB_APP_URL': "https://killawantsleep.github.io/outfit-lab/",
    'DELIVERY_COST': 440,
    'GOOGLE_SCRIPT_URL': os.getenv("GOOGLE_SCRIPT_URL")
}

# ======================
# –ö–û–ú–ê–ù–î–ê –°–¢–ê–†–¢
# ======================
@bot.message_handler(commands=['start'])
def start(message):
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(
            "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", 
            web_app=WebAppInfo(url=CONFIG['WEB_APP_URL'])
        ))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(
            message.chat.id,
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *OUTFIT LAB*!\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤.\n"
            "–¢–æ–≤–∞—Ä—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
            parse_mode="Markdown",
            reply_markup=markup
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ /start: {str(e)}")
        bot.reply_to(message, "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# ======================
# –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–û–í–ê–†–ê (–ê–î–ú–ò–ù)
# ======================
@bot.message_handler(commands=['additem'])
def add_item(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if message.from_user.id not in CONFIG['ADMINS']:
            return bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
        msg = bot.send_message(
            message.chat.id,
            "üì§ *–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:*\n"
            "`–ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –†–∞–∑–º–µ—Ä`\n\n"
            "*–ü—Ä–∏–º–µ—Ä:*\n"
            "_–§—É—Ç–±–æ–ª–∫–∞ –ø—Ä–µ–º–∏—É–º | 1990 | XL_",
            parse_mode="Markdown"
        )
        bot.register_next_step_handler(msg, process_item)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ /additem: {str(e)}")
        bot.reply_to(message, "üö´ –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã")

def process_item(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ
        if not message.photo:
            raise ValueError("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è
        if not message.caption:
            raise ValueError("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
        
        # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
        parts = [p.strip() for p in message.caption.split('|')]
        if len(parts) < 3:
            raise ValueError("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –†–∞–∑–º–µ—Ä")
        
        name, price, size = parts[:3]
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–µ–Ω—ã
        try:
            price = float(price.replace(',', '.'))
            if price <= 0:
                raise ValueError("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        except ValueError:
            raise ValueError("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º URL —Ñ–æ—Ç–æ
        file_info = bot.get_file(message.photo[-1].file_id)
        image_url = f"https://api.telegram.org/file/bot{bot.token}/{file_info.file_path}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Google Script
        response = requests.post(
            CONFIG['GOOGLE_SCRIPT_URL'],
            json={
                'name': name,
                'price': price,
                'image': image_url,
                'size': size
            },
            timeout=10
        )
        
        if response.status_code != 200:
            raise ValueError(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {response.text}")
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —É—Å–ø–µ—Ö–µ
        bot.reply_to(
            message,
            f"‚úÖ *{name}* —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n"
            f"‚Ä¢ –¶–µ–Ω–∞: {price} ‚ÇΩ\n"
            f"‚Ä¢ –†–∞–∑–º–µ—Ä: {size}",
            parse_mode="Markdown"
        )
        
        print(f"–î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: {name} ({price} ‚ÇΩ)")
        
    except Exception as e:
        bot.reply_to(message, str(e))
        print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {str(e)}")

# ======================
# –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ö–ê–ó–û–í –ò–ó WEBAPP
# ======================
@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    try:
        print(f"\n=== –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ ===\n–û—Ç: {message.from_user.id}\n–î–∞–Ω–Ω—ã–µ: {message.web_app_data.data}\n")
        
        data = json.loads(message.web_app_data.data)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
        if data.get('action') != 'new_order':
            raise ValueError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        admin_message = (
            "üõí *–ù–û–í–´–ô –ó–ê–ö–ê–ó*\n\n"
            f"‚Ä¢ –ö–ª–∏–µ–Ω—Ç: [{data['user']['name']}](tg://user?id={message.from_user.id})\n"
            f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: `{data['user']['phone']}`\n"
            f"‚Ä¢ Telegram: @{data['user']['telegram'].replace('@', '')}\n\n"
            f"*–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:* {data.get('payment', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"*–î–æ—Å—Ç–∞–≤–∫–∞:* {'–°–∞–º–æ–≤—ã–≤–æ–∑' if data.get('delivery') == 'pickup' else f'–î–æ—Å—Ç–∞–≤–∫–∞ ({CONFIG["DELIVERY_COST"]} ‚ÇΩ)'}\n"
            f"*–ê–¥—Ä–µ—Å:* {data.get('address', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
            "*–¢–æ–≤–∞—Ä—ã:*\n"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
        for item in data['cart']:
            admin_message += f"‚îú {item['name']} ({item.get('size', '–±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞')}) - {item['price']} ‚ÇΩ\n"
        
        admin_message += f"\nüí∞ *–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:* {data['total']} ‚ÇΩ"
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
        markup = InlineKeyboardMarkup()
        markup.row(
            InlineKeyboardButton(
                "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å",
                url=f"tel:{data['user']['phone']}"
            ),
            InlineKeyboardButton(
                "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å",
                url=f"https://t.me/{data['user']['telegram'].replace('@', '')}"
            )
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for admin_id in CONFIG['ADMINS']:
            try:
                bot.send_message(
                    admin_id,
                    admin_message,
                    parse_mode="Markdown",
                    reply_markup=markup,
                    disable_web_page_preview=True
                )
                print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ admin {admin_id}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ admin {admin_id}: {str(e)}")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "‚úÖ *–í–∞—à –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!*\n\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n\n"
            "‚ÑπÔ∏è –î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤: @outfitlaab_bot",
            parse_mode="Markdown"
        )
        
        print(f"–ó–∞–∫–∞–∑ –æ—Ç {message.from_user.id} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
    except Exception as e:
        print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –∞–¥–º–∏–Ω–∞–º
        for admin_id in CONFIG['ADMINS']:
            try:
                bot.send_message(
                    admin_id,
                    f"üö® *–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞*\n\n"
                    f"–û—Ç: {message.from_user.id}\n"
                    f"–û—à–∏–±–∫–∞: {str(e)}\n\n"
                    f"–î–∞–Ω–Ω—ã–µ: {message.web_app_data.data}",
                    parse_mode="Markdown"
                )
            except:
                pass
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "‚ö†Ô∏è *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞*\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ @outfitlaab_bot",
            parse_mode="Markdown"
        )

# ======================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
# ======================
@bot.message_handler(commands=['test'])
def test_bot(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
        if message.from_user.id not in CONFIG['ADMINS']:
            return bot.reply_to(message, "‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        bot.reply_to(message, "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        for admin_id in CONFIG['ADMINS']:
            try:
                bot.send_message(
                    admin_id,
                    "üîî *–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ*\n\n"
                    "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!",
                    parse_mode="Markdown"
                )
            except Exception as e:
                bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ admin {admin_id}: {str(e)}")
                return
        
        bot.reply_to(message, "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        bot.reply_to(message, f"üö´ –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")

# ======================
# –ó–ê–ü–£–°–ö –ë–û–¢–ê
# ======================
if __name__ == '__main__':
    print("====== BOT STARTED ======")
    print(f"Admins: {CONFIG['ADMINS']}")
    print(f"WebApp URL: {CONFIG['WEB_APP_URL']}")
    
    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"FATAL ERROR: {str(e)}")
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ –ø–∞–¥–µ–Ω–∏–∏ –±–æ—Ç–∞
        for admin_id in CONFIG['ADMINS']:
            try:
                bot.send_message(admin_id, f"üö® –ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {str(e)}")
            except:
                pass