import os
import telebot
import json
import requests
import logging
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('bot.log', encoding='utf-8')
    ]
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

class Config:
    ADMINS = [int(id) for id in os.getenv("ADMINS", "").split(",") if id]
    WEB_APP_URL = os.getenv("WEB_APP_URL", "https://killawantsleep.github.io/outfit-lab/")
    DELIVERY_COST = 440
    SCRIPT_URL = os.getenv("GOOGLE_SCRIPT_URL")

try:
    bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))
    logger.info("=== –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω ===")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {str(e)}", exc_info=True)
    exit(1)

def send_to_admins(message, parse_mode="HTML", reply_markup=None):
    for admin_id in Config.ADMINS:
        try:
            bot.send_message(
                admin_id,
                message,
                parse_mode=parse_mode,
                reply_markup=reply_markup,
                disable_web_page_preview=True
            )
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É {admin_id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {str(e)}", exc_info=True)

@bot.message_handler(commands=['start'])
def start(message):
    try:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(
            "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", 
            web_app=WebAppInfo(url=Config.WEB_APP_URL)
        ))
        
        bot.send_message(
            message.chat.id,
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>OUTFIT LAB</b>!\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:",
            parse_mode="HTML",
            reply_markup=markup
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {str(e)}", exc_info=True)

@bot.message_handler(commands=['additem'])
def add_item(message):
    try:
        if message.from_user.id not in Config.ADMINS:
            bot.reply_to(message, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
            return
        
        msg = bot.send_message(
            message.chat.id,
            "üì§ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>\n"
            "<code>–ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –†–∞–∑–º–µ—Ä</code>\n\n"
            "–ü—Ä–∏–º–µ—Ä: <code>–§—É—Ç–±–æ–ª–∫–∞ Oversize | 1990 | XL</code>",
            parse_mode="HTML"
        )
        bot.register_next_step_handler(msg, process_item)
        logger.info(f"–ê–¥–º–∏–Ω {message.from_user.id} –Ω–∞—á–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /additem: {str(e)}", exc_info=True)

def process_item(message):
    try:
        if not message.photo:
            raise ValueError("–¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞")
        
        if not message.caption:
            raise ValueError("–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
        
        parts = [p.strip() for p in message.caption.split('|')]
        if len(parts) < 3:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –†–∞–∑–º–µ—Ä")
        
        name, price, size = parts[:3]
        
        try:
            price = float(price.replace(',', '.'))
        except ValueError:
            raise ValueError("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        
        file_info = bot.get_file(message.photo[-1].file_id)
        image_url = f"https://api.telegram.org/file/bot{bot.token}/{file_info.file_path}"
        
        response = requests.post(
            Config.SCRIPT_URL,
            json={
                'action': 'add_item',
                'name': name,
                'price': price,
                'image': image_url,
                'size': size
            },
            timeout=15
        )
        
        if response.status_code != 200:
            raise ValueError(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {response.text}")
        
        bot.reply_to(
            message,
            f"‚úÖ <b>{name}</b> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n"
            f"–¶–µ–Ω–∞: {price} ‚ÇΩ\n"
            f"–†–∞–∑–º–µ—Ä: {size}",
            parse_mode="HTML"
        )
        logger.info(f"–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω: {name} ({price} ‚ÇΩ)")

    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
        bot.reply_to(message, error_msg)
        logger.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {str(e)}", exc_info=True)

@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    try:
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç {message.from_user.id}")
        
        if not message.web_app_data:
            logger.error("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö web_app_data –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")
            return

        try:
            data = json.loads(message.web_app_data.data)
            logger.info(f"–î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞: {json.dumps(data, indent=2, ensure_ascii=False)}")
        except json.JSONDecodeError as e:
            error_msg = f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: {str(e)}"
            logger.error(error_msg)
            bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞")
            return

        if data.get('action') != 'new_order':
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {data.get('action')}")
            return

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞
        items_text = "\n".join(
            f"‚Ä¢ {item.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} ({item.get('size', '–±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞')}) - {item.get('price', '?')} ‚ÇΩ"
            for item in data.get('cart', [])
        )
        
        delivery_text = (
            "–î–æ—Å—Ç–∞–≤–∫–∞" if data.get('delivery') == 'delivery' else "–°–∞–º–æ–≤—ã–≤–æ–∑"
        ) + f" ({data.get('delivery_cost', 0)} ‚ÇΩ)"
        
        admin_msg = (
            "üõí <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b>\n\n"
            f"üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {data['user'].get('name', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {data['user'].get('phone', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"‚úàÔ∏è <b>Telegram:</b> @{data['user'].get('telegram', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
            f"üí≥ <b>–û–ø–ª–∞—Ç–∞:</b> {'–ö–∞—Ä—Ç–∞' if data.get('payment') == 'card' else '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞'}\n"
            f"üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> {delivery_text}\n"
            f"üìç <b>–ê–¥—Ä–µ—Å:</b> {data.get('address', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
            f"<b>–¢–æ–≤–∞—Ä—ã:</b>\n{items_text}\n\n"
            f"üí∞ <b>–ò—Ç–æ–≥–æ:</b> {data.get('total', 0)} ‚ÇΩ"
        )

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Å–≤—è–∑–∏
        markup = InlineKeyboardMarkup()
        markup.row(
            InlineKeyboardButton(
                "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å",
                url=f"tel:{data['user'].get('phone', '')}"
            ),
            InlineKeyboardButton(
                "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å",
                url=f"https://t.me/{data['user'].get('telegram', '')}"
            )
        )
        
        send_to_admins(admin_msg, reply_markup=markup)
        
        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "‚úÖ <b>–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</b>\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
            f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{message.message_id}",
            parse_mode="HTML"
        )
        
        logger.info(f"–ó–∞–∫–∞–∑ –æ—Ç {data['user'].get('name')} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")

    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞: {str(e)}"
        logger.error(error_msg, exc_info=True)
        send_to_admins(f"üö® {error_msg}")
        bot.send_message(
            message.chat.id,
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
            parse_mode="HTML"
        )

if __name__ == '__main__':
    logger.info("=== –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ===")
    try:
        bot.infinity_polling()
    except Exception as e:
        logger.critical(f"–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å –æ—à–∏–±–∫–æ–π: {str(e)}", exc_info=True)
        send_to_admins(f"üö® –ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {str(e)}")