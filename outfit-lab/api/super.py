import os
import telebot
import json
import requests
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))

class Config:
    ADMINS = [5000931101]  # –í–∞—à Telegram ID (—É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π)
    WEB_APP_URL = "https://killawantsleep.github.io/outfit-lab/"
    DELIVERY_COST = 440
    LOG_CHAT_ID = None  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: ID —á–∞—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤

def send_to_admins(message, parse_mode="HTML", reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    for admin_id in Config.ADMINS:
        try:
            bot.send_message(
                admin_id,
                message,
                parse_mode=parse_mode,
                reply_markup=reply_markup,
                disable_web_page_preview=True
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É {admin_id}: {str(e)}")

@bot.message_handler(commands=['start'])
def start(message):
    try:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(
            "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", 
            web_app=WebAppInfo(url=Config.WEB_APP_URL)
        ))
        
        bot.send_message(
            message.chat.id,
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>OUTFIT LAB</b>!\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤.",
            parse_mode="HTML",
            reply_markup=markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ /start: {str(e)}")

@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    try:
        print(f"\n=== –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç {message.from_user.id} ===\n{message.web_app_data.data}\n")
        
        data = json.loads(message.web_app_data.data)
        
        if data.get('action') != 'new_order':
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", data.get('action'))
            return
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        admin_msg = (
            "üõí <b>–ù–û–í–´–ô –ó–ê–ö–ê–ó</b>\n\n"
            f"üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {data['user']['name']}\n"
            f"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {data['user']['phone']}\n"
            f"‚úàÔ∏è <b>Telegram:</b> @{data['user']['telegram']}\n\n"
            f"üí≥ <b>–û–ø–ª–∞—Ç–∞:</b> {'–ö–∞—Ä—Ç–∞' if data.get('payment') == 'card' else '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞'}\n"
            f"üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> {'–°–∞–º–æ–≤—ã–≤–æ–∑' if data.get('delivery') == 'pickup' else f'–î–æ—Å—Ç–∞–≤–∫–∞ ({Config.DELIVERY_COST}‚ÇΩ)'}\n"
            f"üìç <b>–ê–¥—Ä–µ—Å:</b> {data.get('address', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
            "<b>–¢–æ–≤–∞—Ä—ã:</b>\n"
        )
        
        for item in data['cart']:
            admin_msg += f"‚Ä¢ {item['name']} ({item.get('size', '–±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞')}) - {item['price']}‚ÇΩ\n"
        
        admin_msg += f"\nüí∞ <b>–ò—Ç–æ–≥–æ:</b> {data['total']}‚ÇΩ"
        
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        markup = InlineKeyboardMarkup()
        markup.row(
            InlineKeyboardButton(
                "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å",
                url=f"tel:{data['user']['phone']}"
            ),
            InlineKeyboardButton(
                "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å",
                url=f"https://t.me/{data['user']['telegram']}"
            )
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞–º
        send_to_admins(admin_msg, reply_markup=markup)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "‚úÖ <b>–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</b>\n\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.",
            parse_mode="HTML"
        )
        
    except Exception as e:
        error_msg = f"üö® <b>–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞</b>\n\n{str(e)}\n\n–î–∞–Ω–Ω—ã–µ: {message.web_app_data.data if hasattr(message, 'web_app_data') else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}"
        print(error_msg)
        send_to_admins(error_msg)
        bot.send_message(
            message.chat.id,
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ @outfitlaab_bot",
            parse_mode="HTML"
        )

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    bot.infinity_polling()