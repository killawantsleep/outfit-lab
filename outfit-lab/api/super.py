import os
import telebot
import requests
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from dotenv import load_dotenv

load_dotenv()
bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))
GOOGLE_SCRIPT_URL = os.getenv("GOOGLE_SCRIPT_URL")
ADMINS = [5000931101]  # –í–∞—à ID

@bot.message_handler(commands=['start'])
def start(message):
    try:
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(
            "üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", 
            web_app=WebAppInfo(url=f"https://{bot.get_me().username}.t.me/{bot.get_me().username}/outfitlab")
        ))
        
        bot.send_message(
            message.chat.id,
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OUTFIT LAB!\n–¢–æ–≤–∞—Ä—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
            reply_markup=markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {str(e)}")
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@bot.message_handler(commands=['additem'])
def add_item(message):
    if message.from_user.id not in ADMINS:
        return bot.reply_to(message, "‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")

    msg = bot.send_message(
        message.chat.id,
        "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<b>–ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –†–∞–∑–º–µ—Ä</b>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <i>–§—É—Ç–±–æ–ª–∫–∞ –ø—Ä–µ–º–∏—É–º | 1990 | XL</i>",
        parse_mode="HTML"
    )
    bot.register_next_step_handler(msg, process_item)

def process_item(message):
    try:
        if not message.photo:
            raise ValueError("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞")
        
        if not message.caption:
            raise ValueError("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
        
        parts = [p.strip() for p in message.caption.split('|')]
        if len(parts) < 3:
            raise ValueError("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –†–∞–∑–º–µ—Ä")
        
        name, price, size = parts[:3]
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–µ–Ω—ã
        try:
            price = float(price.replace(',', '.'))
            if price <= 0:
                raise ValueError("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        except ValueError:
            raise ValueError("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ
        file_info = bot.get_file(message.photo[-1].file_id)
        image_url = f"https://api.telegram.org/file/bot{bot.token}/{file_info.file_path}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Google Sheets
        response = requests.post(
            GOOGLE_SCRIPT_URL,
            json={
                'name': name,
                'price': price,
                'image': image_url,
                'size': size
            },
            timeout=10
        )
        
        if response.status_code != 200:
            raise ValueError(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {response.text}")
        
        bot.reply_to(
            message,
            f"‚úÖ <b>{name}</b> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n"
            f"–¶–µ–Ω–∞: {price} ‚ÇΩ\n"
            f"–†–∞–∑–º–µ—Ä: {size}",
            parse_mode="HTML"
        )
        
    except Exception as e:
        bot.reply_to(message, str(e))
        print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {str(e)}")

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()